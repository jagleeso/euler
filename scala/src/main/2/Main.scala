package james.exercises.euler

// Each new term in the Fibonacci sequence is generated by adding the 
// previous two terms. By starting with 1 and 2, the first 10 terms will be:
// 
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
// 
// By considering the terms in the Fibonacci sequence whose values do not 
// exceed four million, find the sum of the even-valued terms.

object Problem2 {

  // Create a lazy infinite stream of all fibonacci numbers
  lazy val fib = {
    def fibstream(x1 : Int, x2 : Int) : Stream[Int] = {
      x1 #:: fibstream(x2, x1 + x2)
    }
    fibstream(1, 2)
  }

  def main(args: Array[String]) = {
    val answer = EulerUtil.sum(
      fib.takeWhile(_ < 4000000).filter(_ % 2 == 0)
    )
    println(answer)
  }

}
